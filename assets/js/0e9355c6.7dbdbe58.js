"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4864],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),s=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(r),f=n,m=u["".concat(c,".").concat(f)]||u[f]||d[f]||i;return r?a.createElement(m,o(o({ref:t},p),{},{components:r})):a.createElement(m,o({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:n,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},9693:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=r(7462),n=(r(7294),r(3905));const i={title:"Overview"},o="DataSet",l={unversionedId:"reference/DataSet/index",id:"reference/DataSet/index",title:"Overview",description:"We recommend you become familiar with the FileData class before reading this page.",source:"@site/docs/reference/DataSet/index.md",sourceDirName:"reference/DataSet",slug:"/reference/DataSet/",permalink:"/documentation/docs/reference/DataSet/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reference/DataSet/index.md",tags:[],version:"current",frontMatter:{title:"Overview"},sidebar:"referenceSidebar",previous:{title:"FileData.from_file",permalink:"/documentation/docs/reference/FileData/from_file"},next:{title:"DataSet.from_files",permalink:"/documentation/docs/reference/DataSet/from_files"}},c={},s=[{value:"Overview",id:"overview",level:2},{value:"Interface",id:"interface",level:2},{value:"Attributes",id:"attributes",level:3},{value:"Methods",id:"methods",level:3}],p={toc:s};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"dataset"},"DataSet"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"from quyckplot import DataSet\n")),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"We recommend you become familiar with the ",(0,n.kt)("a",{parentName:"p",href:"/docs/reference/FileData"},"FileData class")," before reading this page.")),(0,n.kt)("h2",{id:"overview"},"Overview"),(0,n.kt)("p",null,"This is the main class exported by Quyckplot. Essentially, it is a list of ",(0,n.kt)("inlineCode",{parentName:"p"},"FileData")," instances. It is used to store data from multiple files. Of course, it can also be used to store data from a single file, but in this case, it is not necessary to use this class, since the ",(0,n.kt)("inlineCode",{parentName:"p"},"FileData")," class is sufficient."),(0,n.kt)("h2",{id:"interface"},"Interface"),(0,n.kt)("h3",{id:"attributes"},"Attributes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"data"),": a list of ",(0,n.kt)("inlineCode",{parentName:"li"},"FileData")," instances.")),(0,n.kt)("h3",{id:"methods"},"Methods"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"from_files")," (class method): loads data from a file name."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"from_regex")," (class method): loads data from a regular expression."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"clear"),": removes all the data from the dataset."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"map"),": applies a function to all the data in the dataset.")))}u.isMDXComponent=!0}}]);